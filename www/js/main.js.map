{"version":3,"sources":["terminal.js"],"names":["Accordiong","container","time","_this","this","_classCallCheck","listener","ev","preventDefault","toggle","heading","querySelector","content","calculateHeight","status","dataset","accordion","addEventListener","_createClass","key","value","node","cloneNode","setAttribute","document","appendChild","height","offsetHeight","remove","isStatus","setStatus","show","collapse","name","compare","accordions","Array","from","querySelectorAll","map","a","console","log"],"mappings":"8XAAA,WAAO,IACCA,EADD,WAEH,SAAAA,EAAYC,EAAWC,GAAM,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAJ,GAAAI,KA4B7BE,SAAW,SAACC,GAKV,OAJAA,EAAGC,iBAEHL,EAAKM,SAEEN,GAhCPC,KAAKH,UAAYA,EACjBG,KAAKM,QAAUN,KAAKH,UAAUU,cAAc,4BAC5CP,KAAKQ,QAAUR,KAAKH,UAAUU,cAAc,4BAC5CP,KAAKF,KAAOA,EAEZE,KAAKS,kBAELT,KAAKU,OAASV,KAAKH,UAAUc,QAAQC,UAErCZ,KAAKM,QAAQO,iBAAiB,QAASb,KAAKE,UAZ3C,OAAAY,aAAAlB,EAAA,CAAA,CAAAmB,IAAA,kBAAAC,MAAA,WAgBD,IAAMC,EAAOjB,KAAKQ,QAAQU,WAAU,GAWpC,OAVAD,EAAKE,aAAa,QAAS,iDAEdC,SAASb,cAAc,QAE/Bc,YAAaJ,GAElBjB,KAAKsB,OAASL,EAAKM,aAEnBN,EAAKO,SAEExB,OA3BN,CAAAe,IAAA,mBAAAC,MAAA,WAuCD,OAAOhB,KAAKsB,SAvCX,CAAAP,IAAA,WAAAC,MAAA,WA2CD,IAAGhB,KAAKyB,SAAS,YAIjB,OAFAzB,KAAK0B,UAAU,YAER1B,OA/CN,CAAAe,IAAA,OAAAC,MAAA,WAmDD,IAAGhB,KAAKyB,SAAS,QAIjB,OAFAzB,KAAK0B,UAAU,QAER1B,OAvDN,CAAAe,IAAA,SAAAC,MAAA,WA2DD,OAAOhB,KAAKyB,SAAS,YAAczB,KAAK2B,OAAS3B,KAAK4B,aA3DrD,CAAAb,IAAA,YAAAC,MAAA,SA8DOa,GACR7B,KAAKU,OAASmB,EAEd7B,KAAKH,UAAUc,QAAQC,UAAYiB,IAjElC,CAAAd,IAAA,WAAAC,MAAA,SAuEMa,GACP,IAAMC,EAAU,SAACpB,GAAD,OAAYmB,EAAMnB,IAAWmB,EAAOnB,GAEpD,OAAQV,KAAKU,QACX,IAAK,WACH,OAAOoB,EAAQ,YACjB,IAAK,aACH,OAAOA,EAAQ,cACjB,IAAK,OACH,OAAOA,EAAQ,aAhFlBlC,EAAA,GAqFCmC,EAAaC,MAAMC,KAAMb,SAASc,iBAAiB,qBAAsBC,IAAI,SAAAC,GAAA,OAAK,IAAIxC,EAAWwC,EAAG,OAC1GC,QAAQC,IAAIP,GAtFd","file":"main.js","sourcesContent":["(() => {\n  class Accordiong {\n    constructor(container, time) {\n      this.container = container;\n      this.heading = this.container.querySelector('[data-accordion-heading]');\n      this.content = this.container.querySelector('[data-accordion-content]');\n      this.time = time;\n\n      this.calculateHeight();\n\n      this.status = this.container.dataset.accordion;\n\n      this.heading.addEventListener('click', this.listener);\n    }\n\n    calculateHeight() {\n      const node = this.content.cloneNode(true);\n      node.setAttribute('style', 'position:fixed; left: -9999px; display: block');\n\n      const body = document.querySelector('body');\n\n      body.appendChild( node );\n\n      this.height = node.offsetHeight;\n\n      node.remove();\n\n      return this;\n    }\n\n    listener = (ev) => {\n      ev.preventDefault();\n\n      this.toggle();\n\n      return this;\n    }\n\n    getContentHeight() {\n      return this.height;\n    }\n\n    collapse() {\n      if(this.isStatus('collapse')) return;\n\n      this.setStatus('collapse');\n\n      return this;\n    }\n\n    show() {\n      if(this.isStatus('show')) return;\n\n      this.setStatus('show');\n\n      return this;\n    }\n\n    toggle() {\n      return this.isStatus('collapse') ? this.show() : this.collapse();\n    }\n\n    setStatus(name) {\n      this.status = name;\n\n      this.container.dataset.accordion = name;\n\n      return;\n    }\n\n\n    isStatus(name) {\n      const compare = (status) => name? status === name : status;\n\n      switch (this.status) {\n        case 'collapse':\n          return compare('collapse');\n        case 'collapsing':\n          return compare('collapsing');\n        case 'show':\n          return compare('show');\n      }\n    }\n  }\n\n  const accordions = Array.from( document.querySelectorAll('[data-accordion]') ).map(a => new Accordiong(a, 350));\n  console.log(accordions)\n})()\n"]}